# Nom del procés que veuràs a GitHub
name: Desplegament Segur i Automàtic al Servidor NUC

# Aquesta acció s'activa cada cop que fas un 'push' a la branca 'main'
on:
  push:
    branches:
      - main

# Defineix les tasques que s'han d'executar
jobs:
  deploy:
    # L'automatització s'executa en un servidor de GitHub amb Ubuntu
    runs-on: ubuntu-latest

    # Defineix els passos del procés
    steps:
      # Aquest és l'únic pas: connectar-se al teu servidor i executar les comandes
      - name: Connectar, actualitzar i reiniciar el servidor
        # Usem una acció pre-feta per facilitar la connexió SSH
        uses: appleboy/ssh-action@v1.0.3 # Recomano usar una versió específica en lloc de @master
        with:
          # Agafem les dades dels secrets que ja tens configurats
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 2244 # <--- El teu port segur

          # Aquestes són les comandes que s'executaran al teu servidor, una darrere l'altra
          script: |
            # 1. Anem a la carpeta del teu projecte
            cd ~/projectes/Web_SO
            
            # --- LÍNIES NOVES AFEGIDES - INICI ---
            # 2. Comprovem si els certificats SSL existeixen. Si no, els creem.
            if ! ls /home/nection/projectes/Web_SO/*-key.pem > /dev/null 2>&1; then
              echo "Generant certificats SSL per primer cop..."
              mkcert localhost 127.0.0.1 ::1 192.168.1.47 192.168.1.38
            fi
            # --- LÍNIES NOVES AFEGIDES - FI ---

            # 3. Descarreguem l'últim estat del repositori remot
            git fetch origin main
            
            # 4. Forcem que els FITXERS SEGUITS PER GIT siguin un clon exacte de la versió remota.
            # Aquesta comanda NO TOCARÀ els fitxers .pem creats (si ja tens *.pem al .gitignore)
            git reset --hard origin/main
            
            # 5. Instal·lem les dependències de forma neta i només les de producció
            npm ci --production
            
            # 6. Reiniciem l'aplicació amb PM2 per aplicar tots els canvis de codi
            pm2 restart web-so